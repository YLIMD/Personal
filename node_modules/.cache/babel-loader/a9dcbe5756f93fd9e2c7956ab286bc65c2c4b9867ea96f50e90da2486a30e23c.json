{"ast":null,"code":"var _jsxFileName = \"C:\\\\AFront\\\\Js\\\\firstminiproject\\\\src\\\\Pages\\\\Project.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { projects } from \"../Helpers/projectsList\";\nimport BtnGitHub from \"../Components/BtnGitHub\";\nimport { Swiper, SwiperSlide, useSwiper } from 'swiper/react';\nimport \"swiper/css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Project = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const project = projects[id];\n  const imagesBig = project.imagesBig;\n  if (imagesBig.length < 2) {\n    let showSlider = false;\n  } else {\n    let showSlider = true;\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"  project-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title-1\",\n            children: project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this), \"if(showSlider==true)\", /*#__PURE__*/_jsxDEV(Swiper, {\n            slidesPerView: 1,\n            spaceBetween: 50,\n            loop: true,\n            style: {\n              width: \"100%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"  project-sliderBtn_left\",\n              children: /*#__PURE__*/_jsxDEV(SliderButton, {\n                side: \"left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }, this), imagesBig.map((imageBig, index) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n              style: {\n                width: \"70%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imageBig,\n                alt: project.title,\n                className: \"project-details__cover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)), /*#__PURE__*/_jsxDEV(SliderButton, {\n              side: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-details__skills\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Used Skills: \", /*#__PURE__*/_jsxDEV(\"em\", {\n                children: project.skills\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-details__desc\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: project.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), project.gitHubLink && /*#__PURE__*/_jsxDEV(BtnGitHub, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 14\n  }, this);\n};\n_s(Project, \"r5uZNI/QgQLJ6YUN+rmQ/OIgZ/k=\", false, function () {\n  return [useParams];\n});\n_c = Project;\nconst SliderButton = props => {\n  _s2();\n  const swiper = useSwiper();\n  const nameForClass = \"slideSwipeBtn_\" + props.side;\n  const displayLeft = props.side === \"right\" ? \"none\" : \"block\";\n  const displayRight = props.side === \"right\" ? \"block\" : \"none\";\n  const handleSwipe = () => {\n    if (props.side === \"right\") {\n      swiper.slideNext();\n    } else {\n      swiper.slidePrev();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flexCenter r-buttons\",\n    style: {\n      width: \"100%\",\n      zIndex: \"3\",\n      position: \"absolute\",\n      top: \"50%\",\n      transform: \"translateY(-50%)\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameForClass,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projectBtnWrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {},\n          onClick: handleSwipe,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              display: ` ${displayLeft}`\n            },\n            children: \"<\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              display: ` ${displayRight}`\n            },\n            children: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s2(SliderButton, \"7yKpomHFPHyHiOpTV4g/MTjgI7I=\", false, function () {\n  return [useSwiper];\n});\n_c2 = SliderButton;\nexport default Project;\nvar _c, _c2;\n$RefreshReg$(_c, \"Project\");\n$RefreshReg$(_c2, \"SliderButton\");","map":{"version":3,"names":["useParams","projects","BtnGitHub","Swiper","SwiperSlide","useSwiper","jsxDEV","_jsxDEV","Project","_s","id","project","imagesBig","length","showSlider","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","slidesPerView","spaceBetween","loop","style","width","SliderButton","side","map","imageBig","index","src","alt","skills","description","gitHubLink","_c","props","_s2","swiper","nameForClass","displayLeft","displayRight","handleSwipe","slideNext","slidePrev","zIndex","position","top","transform","onClick","display","_c2","$RefreshReg$"],"sources":["C:/AFront/Js/firstminiproject/src/Pages/Project.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport { projects } from \"../Helpers/projectsList\";\r\nimport BtnGitHub from \"../Components/BtnGitHub\";\r\nimport {Swiper, SwiperSlide, useSwiper} from 'swiper/react';\r\nimport \"swiper/css\"\r\n\r\n\r\nconst Project = () => {\r\n\r\n    const {id} = useParams();   \r\n    const project = projects[id];\r\n    const imagesBig = project.imagesBig;\r\n    \r\n    if(imagesBig.length < 2 ){\r\n        let showSlider=false;        \r\n    }\r\n    else{\r\n        let showSlider = true;\r\n    }\r\n    return ( <main className=\"section\">\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n            \r\n            <div className=\"  project-details\">\r\n                <h1 className=\"title-1\">{project.title}</h1>\r\n                if(showSlider==true){\r\n                    <Swiper \r\n                        slidesPerView={1}\r\n                        spaceBetween={50}\r\n                        loop={true}\r\n                        style={{width:\"100%\"}}>\r\n\r\n                        <div className=\"  project-sliderBtn_left\">\r\n                            <SliderButton side=\"left\"/>   \r\n                        </div>\r\n\r\n                        {imagesBig.map((imageBig,index)=>(\r\n\r\n                            <SwiperSlide style={{width:\"70%\"}} key={index}>\r\n                                <img src={imageBig} alt={project.title}className=\"project-details__cover\"/>\r\n                            </SwiperSlide>      \r\n                        \r\n                        ))}\r\n\r\n\r\n                            <SliderButton side=\"right\"/>   \r\n                \r\n\r\n                    </Swiper>\r\n                }                \r\n                <div className=\"project-details__skills\">\r\n                    <p> Used Skills: <em>{project.skills}</em></p>\r\n                </div>\r\n                <div className=\"project-details__desc\">\r\n                    <p>\r\n                    {project.description}</p>\r\n                </div>\r\n                \r\n            {project.gitHubLink &&(<BtnGitHub/>)}\r\n            \r\n            </div>\r\n           \r\n        </div>\r\n    </div>\r\n</main>\r\n);\r\n\r\n}\r\nconst SliderButton = (props)=>{\r\n    const swiper = useSwiper();\r\n    const nameForClass = \"slideSwipeBtn_\" + props.side;\r\n    const displayLeft = props.side ===\"right\"? \"none\": \"block\";\r\n    const displayRight = props.side ===\"right\"? \"block\": \"none\";\r\n    const handleSwipe = ()=>{\r\n        if(props.side === \"right\"){\r\n            swiper.slideNext();\r\n        }\r\n        else{\r\n            swiper.slidePrev();\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"flexCenter r-buttons\"\r\n            style={{width:\"100%\",\r\n                    zIndex: \"3\",\r\n                    position:\"absolute\", top:\"50%\", \r\n                    transform:\"translateY(-50%)\"\r\n\r\n            }}\r\n        >\r\n            <div className= {nameForClass}>\r\n                <div className=\"projectBtnWrapper\">\r\n                    <button style={{}}\r\n                         onClick={handleSwipe}>\r\n                    <p style={{display:` ${displayLeft}`\r\n                    }}>&lt;</p>\r\n                    <p style={{display:` ${displayRight}` \r\n                    }}>&gt;</p>\r\n                    <p></p>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Project;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}